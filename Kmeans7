import cv2
import numpy as np
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
# Step 1: Load the image
image_path = &#39;download.jpg&#39;  # Update with the correct path to your image
image = cv2.imread(image_path)
# Step 2: Convert the image to a 2D array of pixels
# Reshape the image to a 2D array of (n_pixels, 3) where 3 is the color channel
(RGB)
pixels = image.reshape((-1, 3))
# Step 3: Apply K-Means clustering
K = 3  # Number of clusters (you can change this value based on your needs)
kmeans = KMeans(n_clusters=K)
kmeans.fit(pixels)
# Step 4: Assign the labels to the pixels and reshape back to the original image
size
segmented_image = kmeans.cluster_centers_[kmeans.labels_].reshape(image.shape)
# Step 5: Convert back to uint8 for display
segmented_image = np.uint8(segmented_image)
# Step 6: Display the original and segmented image
plt.figure(figsize=(10, 6))
# Original image
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for
proper display
plt.title(Original Image)
plt.axis(off)
# Segmented image
plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(segmented_image, cv2.COLOR_BGR2RGB))
plt.title(Segmented Image)
plt.axis(off)
plt.show()
